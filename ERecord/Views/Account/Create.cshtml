@model ERecord.ViewModel.AdminCreateViewModel
@{
    ViewBag.Title = "Create";
}

<div>
    <a class = "btn btn-info btn-sm" href="@Url.Action("Index", "Admin")">Back to List</a>
</div>

<div class="edit-page">
    <h4 class="reg-h4" style="text-align: center">Create a new Employee Account.</h4>
    <div class="edit-form">
        @using (Html.BeginForm("Create", "Account", FormMethod.Post, new {@class = "form-horizontal row", role = "form"}))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "Please fix the following errors.", new {@class = "text-danger"})
            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control", placeholder = "First Name"})
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.LastName, new {@class = "form-control", placeholder = "Last Name"})
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Email", type = "email"})
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.PhoneNumber, new {@class = "form-control", placeholder = "Phone"})
                    @Html.ValidationMessageFor(m => m.PhoneNumber)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password"})
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                    @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", placeholder = "Confirm Password"})
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Address, new {@class = "form-control", placeholder = "Address"})
                    @Html.ValidationMessageFor(m => m.Address)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.City, new {@class = "form-control", placeholder = "City"})
                    @Html.ValidationMessageFor(m => m.City)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(m => m.State, "--Select State--", new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.State)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(m => m.Nationality, "--Select Country--", new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.Nationality)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(m => m.Gender, "--Select Gender--", new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.Gender)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.Dob, new {htmlAttributes = new {@class = "form-control", @placeholder = "Date of Birth"}})
                    @Html.ValidationMessageFor(m => m.Dob)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(m => m.MaritalStatus, "--Select Marital Status--", new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.MaritalStatus)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.NumberOfChildren, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.NumberOfChildren, new {htmlAttributes = new {@class = "form-control", placeholder = "Number of Children (If Any)"}})
                    @Html.ValidationMessageFor(m => m.NumberOfChildren)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.EmploymentDay, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.EmploymentDay, new {htmlAttributes = new {@class = "form-control", @placeholder = "Date of Birth"}})
                    @Html.ValidationMessageFor(m => m.EmploymentDay)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.SchoolAttended, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.SchoolAttended, new {@class = "form-control", placeholder = "Address"})
                    @Html.ValidationMessageFor(m => m.SchoolAttended)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.MaximumQulaification, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.MaximumQulaification, new { @class = "form-control", placeholder = "Address" })
                    @Html.ValidationMessageFor(m => m.MaximumQulaification)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.ServiceYear, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.ServiceYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date of Birth" } })
                    @Html.ValidationMessageFor(m => m.ServiceYear)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.LastPromoted, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.LastPromoted, new {htmlAttributes = new {@class = "form-control", @placeholder = "Date of Birth"}})
                    @Html.ValidationMessageFor(m => m.LastPromoted)
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.YearlySalary, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(m => m.YearlySalary, new { htmlAttributes = new {@class = "form-control", placeholder = "Address"}})
                    @Html.ValidationMessageFor(m => m.YearlySalary)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.Position, "--Asign Position--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    <span style="color: red">@ViewBag.Message</span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    <input type="submit" class="btn btn-warning" value="Register"/>
                </div>
            </div>
        }
    </div>
</div>

<div>
    <a class="btn btn-info btn-sm" href="@Url.Action("Index", "Admin")">Back to List</a>
</div>