@model ERecord.Models.ApplicationUser

@{
  ViewBag.Title = "Edit";
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-sm" })
</div>

<div class="edit-page">
    <div class="edit-form">
        <h4 class="edit-h4">Edit <span class="display-name">@Model.FullName</span> Profile</h4>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.DateCreated)
                @Html.HiddenFor(model => model.EmailConfirmed)
                @Html.HiddenFor(model => model.PasswordHash)
                @Html.HiddenFor(model => model.SecurityStamp)
                @Html.HiddenFor(model => model.PhoneNumberConfirmed)
                @Html.HiddenFor(model => model.TwoFactorEnabled)
                @Html.HiddenFor(model => model.LockoutEndDateUtc)
                @Html.HiddenFor(model => model.LockoutEnabled)
                @Html.HiddenFor(model => model.AccessFailedCount)
                @Html.HiddenFor(model => model.Email)


                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.City, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.State, htmlAttributes: new {@class = "control-label"})
                        @Html.EnumDropDownListFor(model => model.State, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.State, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new {@class = "control-label"})
                        @Html.EnumDropDownListFor(model => model.Nationality, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Nationality, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "control-label"})
                        @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Dob, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.Dob, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Dob, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new {@class = "control-label"})
                        @Html.EnumDropDownListFor(model => model.MaritalStatus, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.MaritalStatus, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.NumberOfChildren, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.NumberOfChildren, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.NumberOfChildren, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.EmploymentDay, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.EmploymentDay, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.EmploymentDay, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.SchoolAttended, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.SchoolAttended, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.SchoolAttended, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.MaximumQulaification, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.MaximumQulaification, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.MaximumQulaification, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ServiceYear, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.ServiceYear, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ServiceYear, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.LastPromoted, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.LastPromoted, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LastPromoted, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.YearlySalary, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.YearlySalary, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.YearlySalary, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new {@class = "control-label"})
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.IsActive, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.IsActive, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="col-md-6">
                        <input type="submit" value="Save Changes" class="btn btn-info"/>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-primary btn-sm"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
